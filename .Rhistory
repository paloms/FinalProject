}
hiv_death_map(2016)
hiv_death_map <- function(input) {
map_data <- filter(death_hiv, year == input)
map <- ggplot(map_data, aes(x=long, y=lat, group=group, fill=map_data$number)) +
geom_polygon() +
scale_fill_continuous(low="lightyellow", high="magenta", name = "Number of Deaths") +
ggtitle(paste("Reported HIV/AIDS Deaths in", input))
return(map)
}
hiv_death_map(2016)
hiv_death_map <- function(input) {
map_data <- filter(death_hiv, year == input)
map <- ggplot(map_data, aes(x=long, y=lat, group=group, fill=map_data$number)) +
geom_polygon() +
scale_fill_continuous(low="lightyellow", high="magenta", name = "# of Deaths") +
ggtitle(paste("Reported HIV/AIDS Deaths in", input))
return(map)
}
hiv_death_map(2016)
cases_hiv<- read.csv("data/LIVING_WITH_HIV_ESTIMATES.csv",header = T,stringsAsFactors = F) %>%
select(YEAR..DISPLAY., COUNTRY..DISPLAY., Numeric)
colnames(cases_hiv) <- c("year", "country", "number")
for(i in 1:nrow(namechange)) {
cases_hiv[cases_hiv == namechange$OldName[i]] <- namechange$NewName[i]
}
cases_hiv[is.na(cases_hiv)] <- 0
cases_hiv <- merge(map_data("world"), cases_hiv, by.x="region", by.y = "country", all.x = T) %>%
arrange(year)
hiv_case_map <- function(input) {
map_data <- filter(cases_hiv, year == input)
map <- ggplot(map_data, aes(x=long, y=lat, group=group, fill=map_data$number)) +
geom_polygon() +
scale_fill_continuous(low="seashell", high="indianred4", name = "# of Cases") +
ggtitle(paste("Reported HIV/AIDS Cases in", input))
return(map)
}
hiv_cases_map <- function(input) {
map_data <- filter(cases_hiv, year == input)
map <- ggplot(map_data, aes(x=long, y=lat, group=group, fill=map_data$number)) +
geom_polygon() +
scale_fill_continuous(low="seashell", high="indianred4", name = "# of Cases") +
ggtitle(paste("Reported HIV/AIDS Cases in", input))
return(map)
}
hiv_cases_map(2016)
cases_hiv<- read.csv("data/LIVING_WITH_HIV_ESTIMATES.csv",header = T,stringsAsFactors = F) %>%
select(YEAR..DISPLAY., COUNTRY..DISPLAY., Numeric)
colnames(cases_hiv) <- c("year", "country", "number")
for(i in 1:nrow(namechange)) {
cases_hiv[cases_hiv == namechange$OldName[i]] <- namechange$NewName[i]
}
cases_hiv[is.na(cases_hiv)] <- 0
cases_hiv <- left_join(map_data("world"), cases_hiv, by.x="region", by = c("region" == "country", all.x = T) %>%
arrange(year)
hiv_cases_map <- function(input) {
map_data <- filter(cases_hiv, year == input)
map <- ggplot(map_data, aes(x=long, y=lat, group=group, fill=map_data$number)) +
geom_polygon() +
scale_fill_continuous(low="seashell", high="indianred4", name = "# of Cases") +
ggtitle(paste("Reported HIV/AIDS Cases in", input))
return(map)
}
hiv_cases_map(2016)
hiv_cases_map <- function(input) {
map_data <- filter(cases_hiv, year == input)
map <- ggplot(map_data, aes(x=long, y=lat, group=group, fill=map_data$number)) +
geom_polygon() +
scale_fill_continuous(low="seashell", high="indianred4", name = "# of Cases") +
ggtitle(paste("Reported HIV/AIDS Cases in", input))
return(map)
}
cases_hiv<- read.csv("data/LIVING_WITH_HIV_ESTIMATES.csv",header = T,stringsAsFactors = F) %>%
select(YEAR..DISPLAY., COUNTRY..DISPLAY., Numeric)
colnames(cases_hiv) <- c("year", "country", "number")
for(i in 1:nrow(namechange)) {
cases_hiv[cases_hiv == namechange$OldName[i]] <- namechange$NewName[i]
}
cases_hiv[is.na(cases_hiv)] <- 0
cases_hiv <- left_join(map_data("world"), cases_hiv, by.x="region", by = c("region" == "country", all.x = T) %>%
arrange(year)
hiv_cases_map <- function(input) {
map_data <- filter(cases_hiv, year == input)
map <- ggplot(map_data, aes(x=long, y=lat, group=group, fill=map_data$number)) +
geom_polygon() +
scale_fill_continuous(low="seashell", high="indianred4", name = "# of Cases") +
ggtitle(paste("Reported HIV/AIDS Cases in", input))
return(map)
}
hiv_cases_map <- function(input) {
map_data <- filter(cases_hiv, year == input)
map <- ggplot(map_data, aes(x=long, y=lat, group=group, fill=map_data$number)) +
geom_polygon() +
scale_fill_continuous(low="seashell", high="indianred4", name = "# of Cases") +
ggtitle(paste("Reported HIV/AIDS Cases in", input))
return(map)
}
hiv_cases_map(2016)
View(cases_hiv)
cases_hiv <- left_join(map_data("world"), cases_hiv, by.x="region", by = c("region" == "country", all.x = T) %>%
arrange(year)
cases_hiv<- read.csv("data/LIVING_WITH_HIV_ESTIMATES.csv",header = T,stringsAsFactors = F) %>%
select(YEAR..DISPLAY., COUNTRY..DISPLAY., Numeric)
cases_hiv<- read.csv("data/LIVING_WITH_HIV_ESTIMATES.csv",header = T,stringsAsFactors = F) %>%
select(YEAR..DISPLAY., COUNTRY..DISPLAY., Numeric)
colnames(cases_hiv) <- c("year", "country", "number")
for(i in 1:nrow(namechange)) {
cases_hiv[cases_hiv == namechange$OldName[i]] <- namechange$NewName[i]
}
cases_hiv[is.na(cases_hiv)] <- 0
cases_hiv <- left_join(map_data("world"), cases_hiv, by.x="region", by = c("region" == "country", all.x = T) %>%
arrange(year)
cases_hiv <- left_join(map_data("world"), cases_hiv, by = c("region" == "country")) %>%
arrange(year)
cases_hiv <- left_join(map_data("world"), cases_hiv, by = c("region" == "country"))
cases_hiv <- left_join(x = map_data("world"), y = cases_hiv, by = c("region" == "country"))
death_hiv <- left_join(x = map_data("world"), y = death_hiv, by = c("region" = "country")) %>%
arrange(year)
cases_hiv <- left_join(x = map_data("world"), y = cases_hiv, by = c("region" == "country")) %>%
arrange(year)
test <- map_data("world")
View(test)
cases_hiv <- left_join(x = map_data("world"), y = cases_hiv, by = c("region" = "country")) %>%
arrange(year)
hiv_cases_map <- function(input) {
map_data <- filter(cases_hiv, year == input)
map <- ggplot(map_data, aes(x=long, y=lat, group=group, fill=map_data$number)) +
geom_polygon() +
scale_fill_continuous(low="seashell", high="indianred4", name = "# of Cases") +
ggtitle(paste("Reported HIV/AIDS Cases in", input))
return(map)
}
hiv_cases_map(2016)
hiv_death_map(2016)
hiv_cases_map(2016)
unique(cases_hiv$year)
unique(death_hiv$year)
death_years <- unique(!is.na(death_hiv$year))
unique(!is.na(death_hiv$year))
death_years <- unique(death_hiv$year)
unique(death_hiv$year)
cases_years <- unique(cases_hiv$year)
unique(cases_hiv$year)
cases_years <- unique(cases_hiv$year) %>% cases_hiv[!is.na()]
cases_years <- !is.na(unique(cases_hiv$year))
!is.na(unique(cases_hiv$year))
cases_years <- na.omit(unique(cases_hiv$year))
na.omit(unique(cases_hiv$year))
cases_years <- as.numeric(na.omit(unique(cases_hiv$year)))
as.numeric(na.omit(unique(cases_hiv$year)))
death_years <- as.numeric(na.omit(unique(death_hiv$year)))
death_years
library(shiny)
library(shiny)
library(ggplot2)
runApp()
runApp()
runApp()
our.ui <- fluidPage(
titlePanel("Analyze Disease Patterns around the World"),
# Page Select
selectInput(
inputId = "page",
label = "Page Navigation",
choices = c("About the Project", "Cholera Data", "Malaria Data", "HIV Data")
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
death_years <- unique(death_hiv$year)
cases_years <- unique(cases_hiv$year)
runApp()
runApp()
runApp()
na.omit(unique(death_hiv$year))
runApp('~/Documents/UW/INFO_201/a8-shiny-cjf96')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("Malaria.R")
runApp()
our.ui <- fluidPage(
titlePanel("Analyze Disease Patterns Around the World"),
# Page Select
navbarPage("Team Colomaranian",
tabPanel("About Our Project"),
tabPanel("Cholera Page"),
tabPanel("Malaria Page",
plotOutput("Malaria_plot"),
radioButtons(
inputID="radio2",
label="Select Data to Display:",
choices=c("Reported Deaths", "Reported Cases")
)
),
tabPanel("HIV Page",
plotOutput("HIV_plot"),
uiOutput("dropdown3"),
radioButtons(
inputId="radio3",
label="Select Data to Display:",
choices=c("Reported Deaths", "Reported Cases")
)
)
)
)
radioButtons(
inputID="radio2",
label="Select Data to Display:",
choices=c("Reported Deaths", "Reported Cases")
)
our.ui <- fluidPage(
titlePanel("Analyze Disease Patterns Around the World"),
# Page Select
navbarPage("Team Colomaranian",
tabPanel("About Our Project"),
tabPanel("Cholera Page"),
tabPanel("Malaria Page",
plotOutput("Malaria_plot"),
radioButtons(
inputId="radio2",
label="Select Data to Display:",
choices=c("Reported Deaths", "Reported Cases")
)
),
tabPanel("HIV Page",
plotOutput("HIV_plot"),
uiOutput("dropdown3"),
radioButtons(
inputId="radio3",
label="Select Data to Display:",
choices=c("Reported Deaths", "Reported Cases")
)
)
)
)
runApp()
runApp()
deaths_cholera_world("USA")
deaths_cholera_world <- function(input) {
deaths_cholera <- filter(number_of_deaths, input == country)
map<- ggplot(deaths_cholera,aes(long,lat,group=group,fill=deaths_cholera))+ geom_polygon() +
scale_fill_continuous(low="lightcoral",high ="Red") + ggtitle("Reported Cholera Deaths in ",input)
return(map)
}
number_of_cases <- read.csv("data/NUMBER_OF_CASES_CHOLERA.csv",header=TRUE)
number_of_deaths <- read.csv("data/NUMBER_OF_DEATHS_CHOLERA.csv",header=TRUE)
deaths_cholera_world <- function(input) {
deaths_cholera <- filter(number_of_deaths, input == country)
map<- ggplot(deaths_cholera,aes(long,lat,group=group,fill=deaths_cholera))+ geom_polygon() +
scale_fill_continuous(low="lightcoral",high ="Red") + ggtitle("Reported Cholera Deaths in ",input)
return(map)
}
deaths_cholera_world("USA")
View(number_of_cases)
list_of_years_cholera <- function(input) {
year_of_earliest_tracking_cases <- select(arrange(number_of_cases,Year)[1,],Year)
year_of_latest_tracking_cases <- select(arrange(number_of_cases,-Year)[1,],Year)
return(year_of_earliest_tracking_cases[1,]:year_of_latest_tracking_cases[1,])
}
list_of_years_cholera <- function() {
year_of_earliest_tracking_cases <- select(arrange(number_of_cases,Year)[1,],Year)
year_of_latest_tracking_cases <- select(arrange(number_of_cases,-Year)[1,],Year)
return(year_of_earliest_tracking_cases[1,]:year_of_latest_tracking_cases[1,])
}
list_of_years_cholera
list_of_years_cholera
View(number_of_cases)
cases_cholera_world(2000)
cases_cholera_world<- function(input) {
cases_cholera <- filter(number_of_cases, input == year)
map<- ggplot(cases_cholera,aes(long,lat,group=group,fill=cases_cholera))+ geom_polygon() +
scale_fill_continuous(low="khaki1",high ="Yellow") + ggtitle("Reported Cholera Cases in ",input)
return(map)
}
cases_cholera_world(2000)
View(number_of_deaths)
name_change <- read.csv("namechange.csv", header = T, stringsAsFactors = F)
rm(name_change)
namechange <- read.csv("namechange.csv", header = T, stringsAsFactors = F)
for(i in 1:nrow(namechange)) { # To standardize country names between data and world map
number_of_cases[number_of_cases == namechange$OldName[i]] <- namechange$NewName[i]
}
warnings()
number_of_cases <- read.csv("data/NUMBER_OF_CASES_CHOLERA.csv",header=TRUE, stringsAsFactors = FALSE)
for(i in 1:nrow(namechange)) { # To standardize country names between data and world map
number_of_cases[number_of_cases == namechange$OldName[i]] <- namechange$NewName[i]
}
View(number_of_cases)
for(i in 1:nrow(namechange)) { # To standardize country names between data and world map
number_of_deaths[number_of_deaths == namechange$OldName[i]] <- namechange$NewName[i]
}
number_of_deaths <- read.csv("data/NUMBER_OF_DEATHS_CHOLERA.csv",header=TRUE, stringsAsFactors = FALSE)
for(i in 1:nrow(namechange)) { # To standardize country names between data and world map
number_of_deaths[number_of_deaths == namechange$OldName[i]] <- namechange$NewName[i]
}
number_of_cases <- left_join(x = map_data("world"), y = death_hiv, by = c("region" = "Country")) %>%
arrange(year)
number_of_cases <- left_join(x = map_data("world"), y = number_of_cases, by = c("region" = "Country")) %>%
arrange(year)
number_of_cases <- left_join(x = map_data("world"), y = number_of_cases, by = c("region" = "Country")) %>%
arrange(Year)
View(number_of_deaths)
View(number_of_cases)
number_of_deaths <- left_join(x = map_data("world"), y = number_of_deaths, by = c("region" = "Country")) %>%
arrange(Year)
cases_cholera_world<- function(input) {
cases_cholera <- filter(number_of_cases, input == year)
map<- ggplot(cases_cholera,aes(long,lat,group=group,fill=cases_cholera)) +
geom_polygon() +
scale_fill_continuous(low="khaki1",high ="Yellow") + ggtitle("Reported Cholera Cases in ",input)
return(map)
}
deaths_cholera_world <- function(input) {
deaths_cholera <- filter(number_of_deaths, input == year)
map<- ggplot(deaths_cholera,aes(long,lat,group=group,fill=deaths_cholera))+ geom_polygon() +
scale_fill_continuous(low="lightcoral",high ="Red") + ggtitle("Reported Cholera Deaths in ",input)
return(map)
}
deaths_cholera_world(2000)
cases_cholera_world<- function(input) {
cases_cholera <- filter(number_of_cases, Year == input)
map<- ggplot(cases_cholera,aes(long,lat,group=group,fill=cases_cholera)) +
geom_polygon() +
scale_fill_continuous(low="khaki1",high ="Yellow") + ggtitle("Reported Cholera Cases in ",input)
return(map)
}
deaths_cholera_world <- function(input) {
deaths_cholera <- filter(number_of_deaths, Year == input)
map<- ggplot(deaths_cholera,aes(long,lat,group=group,fill=deaths_cholera))+ geom_polygon() +
scale_fill_continuous(low="lightcoral",high ="Red") + ggtitle("Reported Cholera Deaths in ",input)
return(map)
}
deaths_cholera_world(2000)
deaths_cholera_world <- function(input) {
deaths_cholera <- filter(number_of_deaths, Year == input)
map<- ggplot(deaths_cholera,aes(long,lat,group=group,fill=deaths_cholera$Number.of.reported.deaths.from.cholera))+ geom_polygon() +
scale_fill_continuous(low="lightcoral",high ="Red") + ggtitle("Reported Cholera Deaths in ",input)
return(map)
}
deaths_cholera_world(2000)
deaths_cholera_world(2000)
deaths_cholera_world <- function(input) {
deaths_cholera <- filter(number_of_deaths, Year == input)
map<- ggplot(deaths_cholera,aes(long,lat,group=group,fill=deaths_cholera$Number.of.reported.deaths.from.cholera)) +
geom_polygon() +
scale_fill_continuous(low="lightcoral",high ="Red") +
ggtitle("Reported Cholera Deaths in ",input)
return(map)
}
deaths_cholera_world(2000)
View(death_malaria)
View(death_hiv)
number_of_deaths <- read.csv("data/NUMBER_OF_DEATHS_CHOLERA.csv",header=TRUE, stringsAsFactors = FALSE)
for(i in 1:nrow(namechange)) { # To standardize country names between data and world map
number_of_deaths[number_of_deaths == namechange$OldName[i]] <- namechange$NewName[i]
}
colnames(number_of_deaths)[3] = "reported"
colnames(number_of_deaths)[3] = "Reported"
number_of_deaths <- left_join(x = map_data("world"), y = number_of_deaths, by = c("region" = "Country")) %>%
arrange(Year)
colnames(number_of_cases)[3] <- "Reported"
colnames(number_of_deaths)[3] <= "Reported"
colnames(number_of_deaths)[3] <- "Reported"
deaths_cholera_world <- function(input) {
deaths_cholera <- filter(number_of_deaths, Year == input)
map<- ggplot(deaths_cholera,aes(long,lat,group=group,fill=as.numeric(deaths_cholera$Reported))) +
geom_polygon() +
scale_fill_continuous(low="lightcoral",high ="Red") +
ggtitle("Reported Cholera Deaths in ",input)
return(map)
}
deaths_cholera_world(2000)
deaths_cholera_world(2000)
colnames(number_of_deaths)[3] <- "reported"
number_of_deaths <- read.csv("data/NUMBER_OF_DEATHS_CHOLERA.csv",header=TRUE, stringsAsFactors = FALSE)
for(i in 1:nrow(namechange)) { # To standardize country names between data and world map
number_of_deaths[number_of_deaths == namechange$OldName[i]] <- namechange$NewName[i]
}
colnames(number_of_deaths)[3] <- "reported"
number_of_deaths <- left_join(x = map_data("world"), y = number_of_deaths, by = c("region" = "Country")) %>%
arrange(Year)
deaths_cholera_world <- function(input) {
deaths_cholera <- filter(number_of_deaths, Year == input)
map<- ggplot(deaths_cholera,aes(long,lat,group=group,fill=as.numeric(deaths_cholera$reported))) +
geom_polygon() +
scale_fill_continuous(low="lightcoral",high ="Red") +
ggtitle("Reported Cholera Deaths in ",input)
return(map)
}
deaths_cholera_world(2000)
return(map)
deaths_cholera_world <- function(input) {
deaths_cholera <- filter(number_of_deaths, Year == input)
map<- ggplot(deaths_cholera,aes(long,lat,group=group,fill=as.numeric(deaths_cholera$reported))) +
geom_polygon() +
scale_fill_continuous(low="lightcoral",high ="Red", name="Deaths Reported") +
ggtitle("Reported Cholera Deaths in ",input)
return(map)
}
deaths_cholera_world(2000)
unique(number_of_deaths$reported)
number_of_deaths[is.na(number_of_deaths) | number_of_deaths == "Unknown"] <- 0
deaths_cholera_world(2000)
deaths_cholera_world(2000)
number_of_deaths[is.na(number_of_deaths)] <- 0
deaths_cholera_world(2000)
deaths_cholera_world(1993)
number_of_deaths <- read.csv("data/NUMBER_OF_DEATHS_CHOLERA.csv",header=TRUE, stringsAsFactors = FALSE)
for(i in 1:nrow(namechange)) { # To standardize country names between data and world map
number_of_deaths[number_of_deaths == namechange$OldName[i]] <- namechange$NewName[i]
}
colnames(number_of_deaths)[3] <- "reported"
number_of_deaths <- left_join(x = map_data("world"), y = number_of_deaths, by = c("region" = "Country")) %>%
arrange(Year)
number_of_deaths[is.na(number_of_deaths)] <- 0
number_of_cases[is.na(number_of_cases)] <- 0
number_of_cases <- read.csv("data/NUMBER_OF_CASES_CHOLERA.csv",header=TRUE, stringsAsFactors = FALSE)
for(i in 1:nrow(namechange)) { # To standardize country names between data and world map
number_of_cases[number_of_cases == namechange$OldName[i]] <- namechange$NewName[i]
}
colnames(number_of_cases)[3] <- "reported"
number_of_cases <- left_join(x = map_data("world"), y = number_of_cases, by = c("region" = "Country")) %>%
arrange(Year)
number_of_cases[is.na(number_of_cases)] <- 0
cases_cholera_world(1993)
deaths_cholera_world(1993)
cases_cholera_world(1993)
View(number_of_cases)
nrow(number_of_cases)
nrow(filter(number_of_cases, Year == 1993))
cases_cholera <- filter(number_of_cases, Year == 1993)
nrow(cases_cholera$long)
cases_cholera <- filter(number_of_cases, Year == input)
cases_cholera_world<- function(input) {
cases_cholera <- filter(number_of_cases, Year == input)
map<- ggplot(cases_cholera,aes(long,lat,group=group,fill=as.numeric(cases_cholera$reported))) +
geom_polygon() +
scale_fill_continuous(low="khaki1",high ="Yellow", name = "Cases Reported") +
ggtitle("Reported Cholera Cases in ",input)
return(map)
}
cases_cholera_world(1993)
cases_cholera_world(1996)
cases_cholera_world(2010)
cases_cholera_world(1996)
cholera_years <- as.numeric(na.omit(unique(number_of_deaths$Year)))
cholera_cases_years <- as.numeric(na.omit(unique(number_of_cases$Year)))
rm(cholera_cases_years)
runApp()
map<- ggplot(deaths_cholera,aes(long,lat,group=group,fill=as.numeric(deaths_cholera$reported))) +
geom_polygon() +
scale_fill_continuous(low="lightcoral",high ="Red", name="Deaths Reported") +
ggtitle(paste("Reported Cholera Deaths in",input))
deaths_cholera_world <- function(input) {
deaths_cholera <- filter(number_of_deaths, Year == input)
map<- ggplot(deaths_cholera,aes(long,lat,group=group,fill=as.numeric(deaths_cholera$reported))) +
geom_polygon() +
scale_fill_continuous(low="lightcoral",high ="Red", name="Deaths Reported") +
ggtitle(paste("Reported Cholera Deaths in",input))
return(map)
}
map<- ggplot(cases_cholera,aes(long,lat,group=group,fill=as.numeric(cases_cholera$reported))) +
geom_polygon() +
scale_fill_continuous(low="khaki1",high ="Yellow", name = "Cases Reported") +
ggtitle(paste("Reported Cholera Cases in",input))
cases_cholera_world<- function(input) {
cases_cholera <- filter(number_of_cases, Year == input)
map<- ggplot(cases_cholera,aes(long,lat,group=group,fill=as.numeric(cases_cholera$reported))) +
geom_polygon() +
scale_fill_continuous(low="khaki1",high ="Yellow", name = "Cases Reported") +
ggtitle(paste("Reported Cholera Cases in",input))
return(map)
}
runApp()
setwd("~/Documents/UW/INFO_201/FinalProject")
world_treatment_TB <- left_join(x = map_data("world"), y = treatment_TB, by = c("region" = "Country")) %>% arrange(Year)
treatment_TB <- read.csv("data/TB_DATA.csv",header = T,stringsAsFactors = FALSE)
library(ggplot2)
library(dplyr)
library(maps)
world_treatment_TB <- left_join(x = map_data("world"), y = treatment_TB, by = c("region" = "Country")) %>% arrange(Year)
make_new_treatments_map <- function(year){
treated_previously_year <- filter(world_treatment_TB, world_treatment_TB$Year == year)
map<- ggplot(world_treatment_TB,aes(x=long,y=lat,group=group,fill=`Treatment success rate: new TB cases`))+
geom_polygon() +
scale_fill_continuous(low="Red",high = "#fee0d2") +
ggtitle(paste("Treatment success rate for first time patients in",year))
return(map)
make_previously_treated_map <- function(year){
treated_previously_year <- filter(world_treatment_TB, world_treatment_TB$Year == year)
map<- ggplot(world_treatment_TB,aes(x=long,y=lat,group=group,fill=`Treatment success rate: previously treated TB cases`))+
geom_polygon() +
scale_fill_continuous(low="Red",high = "#fee0d2") +
ggtitle(paste("Treatment success rate in previously treated patients in",year))
return(map)
}
make_new_treatments_map(2010)
View(treatment_TB)
